#Query for create table students

create table students(
	student_id int primary key,
	first_name varchar(10) not null,
	last_name varchar(10) not null
	);


#Query for insert table students

insert into students(student_id, first_name, last_name)
values 
(1, 'Sherri', 'Brown'),
(2, 'Robert', 'Flynn'),
(3, 'Ashley', 'Gamble'),
(4, 'John', 'Hall'),
(5, 'Daniel', 'Turner');


#Query for create table courses

create table courses(
	course_id int primary key,
	course varchar(20) not null
	);


#Query for insert table courses

insert into courses(course_id, course) 
values
(1, 'Mathematics'),
(2, 'English'),
(3, 'Sociology'),
(4, 'Biology'),
(5, 'Physics');

#Query for create table student_score

create table student_score(
	course_id int references courses(course_id), 
	student_id int references students(student_id),
	score int not null);
	
#Query for insert table student_score

insert into student_score(course_id, student_id, score)
values
(1, 1, 80),
(2, 1, 75),
(2, 4, 90),
(2, 5, 60),
(3, 1, 90),
(4, 3, 81),
(4, 4, 77),
(5, 2, 60);

++++++++++++++++++++ The Answer +++++++++++++++++++++++++

1. 
Query:
select c.course, count(*) as "total student"
from student_score ss 
inner join courses c
using(course_id)
group by c.course_id;

answer :
course -> total_student
Biology -> 2
English -> 3
Sociology -> 1
Physics -> 1
Mathematics -> 1

2. 
Query :
select count(*) as "number of courses Ashley took"
from student_score ss 
inner join students s 
using(student_id)
where s.first_name = 'Ashley';

answer:
The number of courses Ashley took = 1

3.
Query:

with
tabel_total as (select c.course, count(*) as total_student
		from student_score ss 
		inner join courses c
		using(course_id)
		group by c.course_id)
select course as courses_has_the_least_students
from tabel_total
where total_student = (select min(total_student) from tabel_total);

Answer:
Sociology
Physics
Mathematics

4. 
Query :

with
tabel_total as (select c.course, count(*) as total_student
		from student_score ss 
		inner join courses c
		using(course_id)
		group by c.course_id)
select course as courses_has_the_most_students
from tabel_total
where total_student = (select max(total_student) from tabel_total);

answer :
course has the most student is English

5.
Query:
select c.course, avg(ss.score) as avg_score
from student_score ss 
inner join courses c
using(course_id)
group by c.course_id;

answer:
course -> avg_score
Biology -> 79
English -> 75
Sociology -> 90
Physics -> 60
Mathematics -> 80

6.
Query:
with
tabel_avg as (select c.course, avg(ss.score) as avg_score
				from student_score ss 
				inner join courses c
				using(course_id)
				group by c.course_id)
select course as "course has the lowest average score"
from tabel_avg
where avg_score = (select min(avg_score) from tabel_avg);

answer:
course has the lowest average score is Physics

7.
Query :

with
tabel_avg as (select c.course, avg(ss.score) as avg_score
				from student_score ss 
				inner join courses c
				using(course_id)
				group by c.course_id)
select course as "course has the highest average score"
from tabel_avg
where avg_score = (select max(avg_score) from tabel_avg);

Answer :
course has the highest average score is Sociology

8. Query

select 
	c.course, 
	max(ss.score) as maksimum_score,
	min(ss.score) as minimum_score
from student_score ss 
inner join courses c
using(course_id)
group by c.course_id;

answer :
course          | maximum_score | minimum_score
Biology         | 81            | 77
English         | 90            | 60
Sociology       | 90            | 90
Physics         | 60            | 60
Mathematics     | 80            | 80
