ApplicationUser
- UUID id
- String nama
- String email
- String password
- AppUser appUser (OneToOne)

AppUser
- Long id
- String nama
- String email (unique)
- String username (unique)
- String imageUrl
- List<Board> boards (@ManyToMany)
- ApplicationUser applicationUser (OneToOne)

AppUserRequest
- String nama
- String email (unique)
- String username (unique)
- String password 

AppUserResponse
- Long id
- String nama
- String email (unique)
- String username (unique)
- String imageUrl

POST /register
request Body{
requestAppUser}

response{
AppUserResponse}

POST /login
request{
usernameOrEmail,
password}

reponse{
token,
username
}

GET /logout

PATCH /appusers/{id}
request{
imageUrl}

response{
id,
username,
imageUrl}

GET /appusers?search={username/email}

response{
AppUserResponse}

Login : username/email & password

Board
- Long id
- String title
- List<Task> tasks
- List<AppUser> appUsers (@ManyToMany)

BoardRequest
-String title

BoardResponse
-Long id
-String title
-List<Task> tasks
-List<AppUser> appUsers

GET /boards (get ALL, pagination 10)

response{
BoardResponse}

GET /boards/{id}

response{
BoardResponse}

POST /boards

request{
BoardRequest}

response{
BoardResponse}

PUT /boards/{id}
request{
BoardRequest}

response{
board}

DELETE /boards/{id}

DELETE user dari board
/boards/{id}/app-users/{id}

Task
- Long id
- String title
- String description
- String status
- Board board (@ManyToOne)

TaskRequest
- String title
- String description
- String status

GET /boards/{id}/tasks?status={taskStatus}
response{
task}

POST /tasks
request{taskRequest}
response{task}

PUT /tasks/{id}
request{TaskRequest}
response(Task}

DELETE /tasks/{id}


Tambah response saat login
- username
- imageUrl
